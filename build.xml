<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Rails">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <import file="buildRails.xml"/>
    <path id="Rails.classpath">
        <pathelement location="classes"/>
        <pathelement location="libs/main/commons-io-2.1/commons-io-2.1.jar"/>
        <pathelement location="libs/main/jgraph5/jgraph.jar"/>
        <pathelement location="libs/main/jgrapht-0.7.3/jgrapht-jdk1.5.jar"/>
        <pathelement location="libs/main/sl4j-1.6.5/slf4j-api-1.6.5.jar"/>
        <pathelement location="libs/test/fest-2.0M6/fest-assert-core-2.0M6.jar"/>
        <pathelement location="libs/test/fest-2.0M6/fest-util-1.2.1.jar"/>
        <pathelement location="libs/test/mockito-1.9.0/mockito-all-1.9.0.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-anim.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-awt-util.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-bridge.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-codec.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-css.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-dom.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-ext.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-gui-util.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-gvt.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-parser.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-script.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-svg-dom.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-swing.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-transcoder.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-util.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/batik-xml.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/js.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/xerces_2_5_0.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/xml-apis-ext.jar"/>
        <pathelement location="libs/main/batik-1.7/lib/xml-apis.jar"/>
        <pathelement location="libs/main/JLayer1.0.1/jl1.0.1.jar"/>
        <pathelement location="libs/main/logback-1.1.1/logback-classic-1.1.1.jar"/>
        <pathelement location="libs/main/logback-1.1.1/logback-core-1.1.1.jar"/>
        <pathelement location="libs/test/junit-4.11/hamcrest-core-1.3.jar"/>
        <pathelement location="libs/test/junit-4.11/junit-4.11.jar"/>
        <pathelement location="libs/main/guava-r17/guava-17.0.jar"/>
        <pathelement location="libs/main/designgridlayout-1.11/designgridlayout-1.11.jar"/>
        <pathelement location="libs/main/df_1.1.1/docking-frames-common.jar"/>
        <pathelement location="libs/main/df_1.1.1/docking-frames-core.jar"/>
        <pathelement location="libs/main/combinatoricslib-2.1/combinatoricslib-2.1.jar"/>
    </path>
    <target name="init">
        <mkdir dir="classes"/>
        <copy includeemptydirs="false" todir="classes">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="classes">
            <fileset dir="src/test/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="classes">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="classes">
            <fileset dir="src/test/resources">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/test/java"/>
            <src path="src/main/resources"/>
            <src path="src/test/resources"/>
            <classpath refid="Rails.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="RunGame (1)">
        <java classname="rails.util.RunGame" failonerror="true" fork="yes">
            <classpath refid="Rails.classpath"/>
        </java>
    </target>
    <target name="RunGame">
        <java classname="net.sf.rails.util.RunGame" failonerror="true" fork="yes">
            <classpath refid="Rails.classpath"/>
        </java>
    </target>
    <target name="TestGame (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="net.sf.rails.test.TestGame" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="Rails.classpath"/>
        </junit>
    </target>
    <target name="TestGame">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestGame" todir="${junit.output.dir}"/>
            <classpath refid="Rails.classpath"/>
        </junit>
    </target>
    <target name="TestGameBuilder (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestGameBuilder" todir="${junit.output.dir}"/>
            <classpath refid="Rails.classpath"/>
        </junit>
    </target>
    <target name="TestGameBuilder (2)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="net.sf.rails.test.TestGameBuilder" todir="${junit.output.dir}"/>
            <classpath refid="Rails.classpath"/>
        </junit>
    </target>
    <target name="TestGameBuilder (3)">
        <java classname="net.sf.rails.test.TestGameBuilder" failonerror="true" fork="yes">
            <classpath refid="Rails.classpath"/>
        </java>
    </target>
    <target name="TestGameBuilder">
        <java classname="test.TestGameBuilder" failonerror="true" fork="yes">
            <classpath refid="Rails.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
