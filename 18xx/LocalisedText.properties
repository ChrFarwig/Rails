# Conventions:
#
# For messages that include a dynamically generated component,
# The text strings are designated by number to denote their 
# position in the string to help aid translation of a complete sentence.
#
# example: System.out.println("This " + foo + " does not work.");
# is localized as:
#          FooString1=This    
#          FooString2= does not work.
#
# Note the initial space in FooString2, this is important to preserve. 
# Trailing space has been accounted for in the application.
#
# The exception to this convention is when single words are frequently used
# in one part of several strings. "Component" is one example of this, where 
# multiple error messages say "Component" + foo + "does something".
#
# When possible, related strings have been grouped together.
#
#### Added by EV 16jul2006:
# I prefer to use MessageFormat for this purpose.
# See the example at line 121.


# Prompt texts
SelectAHexForTile=Select hex to lay a tile on, or press the No Tile button.
SelectATile=Select a tile, select another hex, or press the No Tile button.
RotateTile=Click tile to rotate it, or select another tile or hex, or press Lay Tile to confirm tile, or press the No Tile button.
NoTiles=At the moment there is no valid tile or upgrade for this hex. Select another hex or press the No Tile button.
SelectAHexForToken=Select a city hex to lay a token on, or press the No Token button.
ConfirmToken=Press Lay Token to confirm token, click another city hex, or press the No Token button.
ExtraTile= You can lay an unconnected tile on {0}.
ExtraToken= You can lay an unconnected token on {0}.
TileColours= You can lay {0} connected tile(s).
NormalToken= You can lay a connected token on {0}.

EnterRevenue=Enter the earnings of the operating company
SelectPayout=Select how the earnings are spent
BuyTrain=Buy a train, or press Done to finish this company turn
ClickForSell=Click to select for selling
ClickToBuy=Click to buy
SRHelpText=Stock round help text goes here.

# Button texts
Done=Done
Cancel=Cancel
NoTile=No Tile
NoToken=No Token
LayTile=Lay Tile
LayToken=Lay Token
LAY_TRACK=Lay Track

# Menu items
MOVE=Move
UNDO=Undo
REDO=Redo

#Various UI Strings
AND= and
BANK_SHARES=Bank shares
BANK=Bank
BID=Bid
BUY=Buy
BUYS=buys
BUY_PRIVATE=Buy Private
BUY_TRAIN=Buy Train
CASH=Cash
COMPANY=Company
COMPANY_DETAILS=Company details
CURRENT=Current
EXCHANGED=exchanged
FILE=File
FOR=for
FREE=Free
FROM=from
ITEM=Item
IPO=IPO
LIMIT=Limit
LOG=Log Window
MAP=Map
MARKET=Stock Market
NON_NUMERIC= non-numeric
NOT_FOUND= not found
OF=of
OR=or
OPTIONS=Options
PAR=Par
PASS=Pass
PASSES={0} passes.
PAYOUT=Pay out
PLAYERS=Players
POOL=Pool
PRICES=Prices
PRIVATES=Privates
QUIT=Quit
##RANGE=range
REVENUE=Revenue
SAVE=Save
SELL=Sell
SET_REVENUE=Set Revenue
SET_SCALE=Set Scale
SHARE=share
SHARES=shares
SOLD=sold
SPLIT=Split
STARTS= starts
SWAP=Swap
TO=to
BUY_TRAIN_FROM=train from
TRAINS=Trains
TOKENS=Tokens
UPGRADE=upgrade
WITHHOLD=Withhold
WORTH=Worth

#Misc. UI and Log Messages
WHICH_VARIANT=Select the {0} variant that you want to play
BID_ITEM_LOG={0} bids {1} on {2}. Remaining free cash {3}.
TO_AUCTION={0} will be auctioned
START_COMPANY_LOG={0} starts {1} at {2} and buys {3} shares ({4}%) for {5}.
START_COMPANY={0} starts {1} at {2}.
FLOATS={0} floats and receives {1}
BUY_SHARES_LOG={0} buys {1} share(s) ({2}%) of {3} from {4} for {5}.
SELL_SHARES_LOG={0} sells {1} share(s) ({2}%) of {3} for {4}.
PRICE_MOVES_LOG={0} price goes from {1}({2}) to {3}({4}).
PRICE_STAYS_LOG={0} price stays at {1}({2}).
ALL_PASSED=All players have passed.
ITEM_PRICE_REDUCED=Price of {0} is now reduced to {1}
ALSO_GETS={0} also gets {1}
BASE_PRICE=<html>Base<br>Price</html>
PRICE=Price
CURRENT_PRICE=<html>Current<br>Price</html>
MINIMUM_BID=<html>Min.<br>Bid</html>
GAME_STATUS_TITLE=Rails: Game Status
START_ROUND_TITLE=Rails: Start Round
END_OF_GAME_CLOSE_ALL_WINDOWS=Close all windows
BUY_TRAIN_FROM={0}-train from {1}
AT_PRICE=at {0}
BUY_WHICH_TRAIN=Buy which train?
WHICH_TRAIN=Which train
YOU_MUST_ADD_CASH= (you must add {0})
YOU_MAY_ADD_CASH= (you may add up to {0})
FOR_WHICH_PRICE= for which price from 
ENTER_PRICE_OR_CANCEL=Enter a valid price or hit Cancel
WHICH_TRAIN_PRICE={0} buys a {1}-train from {2} for which price?
WHICH_PRICE=Which price?
WHICH_TRAIN_EXCHANGE_FOR=Which train to exchange for {0}
WHICH_TRAIN_TO_EXCHANGE=Which train to exchange?
HAS_TOO_MANY_TRAINS=Company {0} has too many trains.
BUY_WHICH_PRIVATE=Buy which private?
WHICH_PRIVATE=Which Private?
WHICH_PRIVATE_PRICE=Buy {0} for which price (valid range {1} to {2})?	
WHICH_START_PRICE=Start {0} at which price?
##FOR_WHAT_PRICE= for what price 
IS_NOW_PRES_OF={0} is now president of {1}
END_SR=All players have passed, end of SR 
SOLD_OUT= is sold out.
CLOSES_AT= closes at
STAYS_AT= stays at
PRICE_GOES_FROM= prices go from
GAME_OVER=Game over!

FIRST=First
TRAIN_BOUGHT= train bought
ALL=All
TRAINS_RUSTED= trains are rusted and have been removed.
TRAINS_AVAILABLE= trains are now available.

#Error Messages
ERROR=Error
FileLoadException=Unable to load file: 
UnnamedCompany=Unnamed company found.
UnnamedCompanyType=Unnamed company type found.
CompanyNoClass1=Company type 
CompanyNoClass2= has no class defined.
CompanyConfiguredTwice1=Company type 
CompanyNoType2= has no type defined.
CompanyUndefinedType2= has undefined type 
ClassNoInstance1=Class 
ClassNoInstance2= cannot be instantiated
StartPackNoClass1=Start packet 
StartPackNoClass2= has no class defined.
CantCloneCompany1=Cannot create company 
CantCloneCompany2= by cloning
ComponentManagerNotYetConfigured=ComponentManager has not yet been configured.
ComponentManagerNotReconfigured=Cannot reconfigure the ComponentManager.
Component=Component 
ComponentNoClass2= has no class defined.
ConfiguredTwice2= is configured twice.
ComponentInitAs= initialized as 
UnnamedComponent=Unnamed component found.
ComponentNoClass1=Couldn't instantiate an object of class 
ComponentNoClass2= for component 
AcceptingConfigFailure=Temporarily accepting configuration failure
GameSetupFailed1=Game setup from file 
GameSetupFailed2= failed
NoNameSpecified=No name specified
InvalidCost=Invalid or zero cost specified
InvalidAmount=Invalid or zero amount specified
InvalidStops=Invalid or zero major stops specified
NoTilesXML=No Tiles XML file specified
NoTilesTag=No Tiles tag found in Tiles file
DuplicateTilesetID=Duplicate tile {0} in TileSet.xml
DuplicateTileID=Duplicate tile {0} in Tiles.xml
TileMissingInTileSet=Tile {0} is missing in TileSet.xml
TileMissing=Tile {0} is missing in Tiles.xml
TileColorMissing=Missing color in tile {0}
FromOrToMissing=Missing from or to in tile {0}
TileStationHasNoID=Tile {0} has Station without id
TileStationHasNoType=Tile {0} has Station without type
TileStationHasInvalidType=Tile {0} has Station with an invalid type {1}
InvalidTrackEnd=Invalid track end
UpgradeNotFound=Tile {0}: upgrade {1} not found
NonNumericUpgrade=Tile {0}: non-numeric upgrade {1}
StartStockRound=Start of Stock Round 
HasPriority={0} has the Priority Deal
WrongPlayer=Wrong player 
WrongCompany=Wrong company
InvalidParPriceSetting=Invalid par price {0} set by {1} for {2}: {3}
AlreadyBought={0} already bought a share this turn
CompanyDoesNotExist=Company {0} does not exist
CompanyAlreadyStarted={0} has already been started.
CantBuyMoreCerts=Cannot buy more certificates
InvalidStartPrice=Invalid start price
NoMoney=Not enough money
CantStart={0} cannot start company {1} for {2}: {3}
AlreadySoldThisTurn={0} already sold {1} this turn
NotYetStarted={0} is not yet started.
NotAvailable=No {0} shares available in {1}
CantBuyMoreThanOne=Cannot buy more than one {0} share
WouldExceedCertLimit= would exceed certificate limit.
WouldExceedHoldLimit= would exceed holding limit
CantBuy={0} cannot buy {1} share(s) of {2} from {3}: {4}
CantSell={0} cannot sell {1} share(s) of {2}: {3}
CantBuyItem={0} cannot buy {1}: {2}
StartOfInitialRound=Start of initial round
NotForSale=Item is not for sale yet
DoesNotExist=Item does not exist
BidTooLow=Bid too low, minimum is {0}
BidTooHigh=Bid too high, player has only {0} free for bidding
CannotBid=Cannot bid on this item
InvalidBid=Invalid bid by {0} on {1}: {2}
InvalidPass=Invalid pass by {0}: {1}
InvalidAction=Invalid action in this game
NoPriceToSet=No price to be set
FirstSRNoSell=Cannot sell in first Stock Round.
NoSellZero=Cannot sell less that one share
SoldEnough=May not sell anymore in this turn
NoShareOwned=Does not have the share(s)
PoolOverHoldLimit=Pool would get over its share holding limit
NoDumping=Cannot dump presidency
NotEnoughShares=Does not have that many shares.
UnnamedStockSpaceType=Unnamed stock space type found.
StockSpaceType1=Stock space type 
UnnamedStockSpace=Unnamed stock space found.
StockSpace1=Stock space
NoPrice2= has no price defined.
StockSpaceType1=Stock space type
IsUndefined2= is undefined.

# Tooltips

ClickToSelectForBuying=Click to select for buying
ClickToSelectForBidding=Click to select for bidding
ThisIhemIsAuctionedNow=This item is auctioned now